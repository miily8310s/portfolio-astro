---
type Props = {
  length: number;
  currentPage: number;
  firstUrl: string;
  prevUrl: string | undefined;
  nextUrl: string | undefined; 
}

const { length, currentPage, firstUrl, prevUrl, nextUrl } = Astro.props;
const paginationList = Array.from({ length }, (_, i) => i +1 )
---

<nav>
  <ol class="flex justify-center font-medium">
    {
      prevUrl && (
        <li>
          <a href={prevUrl} class="grid place-items-center h-8 w-8 rounded border border-gray-100 text-zinc-900">{'<'}</a>
        </li>
      )
    }
    {
      paginationList.map((num) => (
        <li>
          <a
            href={`${firstUrl}${num === 1 ? '' : '' + num }`}
            class={`block h-8 w-8 rounded border text-center leading-8 text-zinc-900 dark:text-white ${currentPage === num ? 'border-indigo-600 bg-indigo-500 !text-white' : ''}`}>
            {num}
          </a>
        </li>
      ))
    }
    {
      nextUrl && (
        <li>
          <a href={nextUrl} class="grid place-items-center h-8 w-8 rounded border border-gray-100 text-zinc-900">{'>'}</a>
        </li>
      )
    }
  </ol>
</nav>